/*
 * CategorizedInfoPanel.java
 *
 * Created on 03. Februar 2004, 09:27
 */

package wodka.view;

/**
 * 
 * @author __USER__
 */
public class CategorizedInfoPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    private wodka.view.CategorizedInfoModel model = null;

    /** Creates new form CategorizedInfoPanel */
    public CategorizedInfoPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {// GEN-BEGIN:initComponents
        splitPane = new javax.swing.JSplitPane();
        catScrollPane = new javax.swing.JScrollPane();
        catList = new javax.swing.JList();
        infoScrollPane = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        setPreferredSize(new java.awt.Dimension(650, 400));
        splitPane.setDividerLocation(150);
        splitPane.setDividerSize(5);
        catList.setBorder(new javax.swing.border.EmptyBorder(
                new java.awt.Insets(1, 1, 1, 1)));
        catList
                .setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        catList
                .addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(
                            javax.swing.event.ListSelectionEvent evt) {
                        catListValueChanged(evt);
                    }
                });

        catScrollPane.setViewportView(catList);

        splitPane.setLeftComponent(catScrollPane);

        infoTextArea.setWrapStyleWord(true);
        infoTextArea.setLineWrap(true);
        infoTextArea.setEditable(false);
        infoTextArea.setBackground((java.awt.Color) javax.swing.UIManager
                .getDefaults().get("Panel.background"));
        infoTextArea.setDoubleBuffered(true);
        infoTextArea.setBorder(new javax.swing.border.EmptyBorder(
                new java.awt.Insets(3, 3, 3, 3)));
        infoScrollPane.setViewportView(infoTextArea);

        splitPane.setRightComponent(infoScrollPane);

        add(splitPane, java.awt.BorderLayout.CENTER);

    }// GEN-END:initComponents

    private void catListValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_catListValueChanged
        if (!evt.getValueIsAdjusting()) {
            this.updateInfoFromModel();
        }
    }// GEN-LAST:event_catListValueChanged

    /**
     * Getter for property model.
     * 
     * @return Value of property model.
     * 
     */
    public wodka.view.CategorizedInfoModel getModel() {
        return model;
    }

    /**
     * Setter for property model.
     * 
     * @param model
     *            New value of property model.
     * 
     */
    public void setModel(wodka.view.CategorizedInfoModel model) {
        this.model = model;
    }

    public void updateViewFromModel() {
        javax.swing.DefaultListModel lm = new javax.swing.DefaultListModel();
        for (int i = 0; i < model.categoryCount(); i++) {
            lm.addElement(model.getCategoryName(i));
        }
        this.catList.setModel(lm);
        updateInfoFromModel();
    }

    public void updateInfoFromModel() {
        if (model != null) {
            int i = catList.getSelectedIndex();
            if (i < 0) {
                catList.setSelectedIndex(0);
                i = 0;
            }
            this.infoTextArea.setText(model.getCategoryInfo(i));
            this.infoTextArea.setCaretPosition(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList catList;

    private javax.swing.JScrollPane catScrollPane;

    private javax.swing.JScrollPane infoScrollPane;

    private javax.swing.JTextArea infoTextArea;

    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables

}
