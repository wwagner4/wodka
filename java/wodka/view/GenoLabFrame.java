/*
 * GenoLabFrame.java
 * 
 * Created on 25. Februar 2004, 17:57
 */

package wodka.view;

import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

import wodka.ga.model.Model;
import wodka.ga.soda.SodaraceProgram;
import wodka.util.GenoLabModel;
import wwan.commons.param.ListParam;
import wwan.commons.param.view.WizardDialog;

/**
 * Frame to test Genotypes.
 */
public class GenoLabFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    private GenoLabModel labModel = new GenoLabModel();

    /** Creates new form GenoLabFrame */
    public GenoLabFrame() {
        initComponents();
        this.modelResizePanel
                .setColorMode(wodka.view.ModelResizePanel.COLOR_MODE_COLORFUL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() { // GEN-BEGIN:initComponents
        toolBar = new javax.swing.JToolBar();
        configButton = new javax.swing.JButton();
        newModelButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        modelResizePanel = new wodka.view.ModelResizePanel();
        genomScrollPane = new javax.swing.JScrollPane();
        genomTextArea = new javax.swing.JTextArea();
        infoScrollPane = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();

        setTitle("Geno Laboratory");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm();
            }
        });

        configButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/javalobby/EditBook.png")));
        configButton.setToolTipText("configure genotype");
        configButton.setMnemonic('c');
        configButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configButtonActionPerformed();
            }
        });

        toolBar.add(configButton);

        newModelButton.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/javalobby/NewSheet.png")));
        newModelButton.setToolTipText("new random model");
        newModelButton.setMnemonic('n');
        newModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newModelButtonActionPerformed();
            }
        });

        toolBar.add(newModelButton);

        getContentPane().add(toolBar, java.awt.BorderLayout.NORTH);

        contentPanel.setLayout(new java.awt.BorderLayout());

        tabbedPane.setTabPlacement(SwingConstants.BOTTOM);
        modelResizePanel.setPreferredSize(new java.awt.Dimension(900, 600));
        tabbedPane.addTab("model", modelResizePanel);

        genomTextArea.setLineWrap(true);
        genomScrollPane.setViewportView(genomTextArea);

        tabbedPane.addTab("genom", genomScrollPane);

        infoTextArea.setWrapStyleWord(true);
        infoTextArea.setLineWrap(true);
        infoScrollPane.setViewportView(infoTextArea);

        tabbedPane.addTab("info", infoScrollPane);

        contentPanel.add(tabbedPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(contentPanel, java.awt.BorderLayout.CENTER);

        pack();
    } // GEN-END:initComponents

    private void newModelButtonActionPerformed() { // GEN-FIRST:event_newModelButtonActionPerformed
        try {
            repaintRandomModel();
        } catch (Throwable t) {
            handleThrowable(t);
        }
    } // GEN-LAST:event_newModelButtonActionPerformed

    private void configButtonActionPerformed() { // GEN-FIRST:event_configButtonActionPerformed
        try {
            ListParam pl = labModel.getParameterDescription().createListParam();
            labModel.setParameterListFromFields(pl);
            int ret = WizardDialog.showWizardDialog(this, labModel.getLabel(),
                    pl, labModel);
            if (ret == WizardDialog.RETURN_FINISH) {
                labModel.setFieldsFromParameterList(pl);
                this.infoTextArea.setText(labModel.getInfo());
                repaintRandomModel();
            } else {
                this.showInfo("Execution was canceled on users request.");
            }
        } catch (Throwable t) {
            handleThrowable(t);
        }
    } // GEN-LAST:event_configButtonActionPerformed

    private void repaintRandomModel() {
        SodaraceProgram gt = labModel.getRandomGenotype();
        if (gt == null)
            this.showInfo("No genotyp is currently defined.");
        else {
            this.genomTextArea.setText(gt.toString());
            this.modelResizePanel.removeAllModels();
            Model baseModel = gt.evalNoRewise();
            // info("base model:\n" + baseModel.toString());
            this.modelResizePanel.addModel(baseModel);
            Model model = gt.eval();
            // info("model:\n" + model.toString());
            this.modelResizePanel.addModel(model);
            this.modelResizePanel.repaint();
        }
    }

    private void handleThrowable(Throwable t) {
        t.printStackTrace();
        this.showInfo(t.toString());
    }

    private void showInfo(String msg) {
        JOptionPane.showMessageDialog(this, msg);
    }

    /** Exit the Application */
    private void exitForm() { // GEN-FIRST:event_exitForm
        System.exit(0);
    } // GEN-LAST:event_exitForm

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
        new GenoLabFrame().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton configButton;

    private javax.swing.JPanel contentPanel;

    private javax.swing.JScrollPane genomScrollPane;

    private javax.swing.JTextArea genomTextArea;

    private javax.swing.JScrollPane infoScrollPane;

    private javax.swing.JTextArea infoTextArea;

    private wodka.view.ModelResizePanel modelResizePanel;

    private javax.swing.JButton newModelButton;

    private javax.swing.JTabbedPane tabbedPane;

    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables

}
